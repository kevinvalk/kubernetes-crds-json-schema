{
  "definitions": {
    "longhorn.io.v1beta1.BackingImageDataSource": {
      "description": "BackingImageDataSource is where Longhorn stores backing image data source object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackingImageDataSource"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.BackingImageDataSource": {
      "description": "BackingImageDataSource is where Longhorn stores backing image data source object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackingImageDataSource"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "BackingImageDataSourceSpec defines the desired state of the Longhorn backing image data source",
          "properties": {
            "checksum": {
              "type": "string"
            },
            "diskPath": {
              "type": "string"
            },
            "diskUUID": {
              "type": "string"
            },
            "fileTransferred": {
              "type": "boolean"
            },
            "nodeID": {
              "type": "string"
            },
            "parameters": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "sourceType": {
              "enum": [
                "download",
                "upload",
                "export-from-volume",
                "restore"
              ],
              "type": "string"
            },
            "uuid": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "BackingImageDataSourceStatus defines the observed state of the Longhorn backing image data source",
          "properties": {
            "checksum": {
              "type": "string"
            },
            "currentState": {
              "type": "string"
            },
            "ip": {
              "type": "string"
            },
            "message": {
              "type": "string"
            },
            "ownerID": {
              "type": "string"
            },
            "progress": {
              "type": "integer"
            },
            "runningParameters": {
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true,
              "type": "object"
            },
            "size": {
              "format": "int64",
              "type": "integer"
            },
            "storageIP": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.BackingImageManager": {
      "description": "BackingImageManager is where Longhorn stores backing image manager object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackingImageManager"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.BackingImageManager": {
      "description": "BackingImageManager is where Longhorn stores backing image manager object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackingImageManager"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "BackingImageManagerSpec defines the desired state of the Longhorn backing image manager",
          "properties": {
            "backingImages": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "diskPath": {
              "type": "string"
            },
            "diskUUID": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "nodeID": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "BackingImageManagerStatus defines the observed state of the Longhorn backing image manager",
          "properties": {
            "apiMinVersion": {
              "type": "integer"
            },
            "apiVersion": {
              "type": "integer"
            },
            "backingImageFileMap": {
              "additionalProperties": {
                "properties": {
                  "currentChecksum": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "progress": {
                    "type": "integer"
                  },
                  "senderManagerAddress": {
                    "type": "string"
                  },
                  "sendingReference": {
                    "type": "integer"
                  },
                  "size": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "state": {
                    "type": "string"
                  },
                  "uuid": {
                    "type": "string"
                  },
                  "virtualSize": {
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "currentState": {
              "type": "string"
            },
            "ip": {
              "type": "string"
            },
            "ownerID": {
              "type": "string"
            },
            "storageIP": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.BackingImage": {
      "description": "BackingImage is where Longhorn stores backing image object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackingImage"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.BackingImage": {
      "description": "BackingImage is where Longhorn stores backing image object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackingImage"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "BackingImageSpec defines the desired state of the Longhorn backing image",
          "properties": {
            "checksum": {
              "type": "string"
            },
            "disks": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "sourceParameters": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "sourceType": {
              "enum": [
                "download",
                "upload",
                "export-from-volume",
                "restore"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "BackingImageStatus defines the observed state of the Longhorn backing image status",
          "properties": {
            "checksum": {
              "type": "string"
            },
            "diskFileStatusMap": {
              "additionalProperties": {
                "properties": {
                  "lastStateTransitionTime": {
                    "type": "string"
                  },
                  "message": {
                    "type": "string"
                  },
                  "progress": {
                    "type": "integer"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "diskLastRefAtMap": {
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true,
              "type": "object"
            },
            "ownerID": {
              "type": "string"
            },
            "size": {
              "format": "int64",
              "type": "integer"
            },
            "uuid": {
              "type": "string"
            },
            "virtualSize": {
              "description": "Virtual size of image, which may be larger than physical size. Will be zero until known (e.g. while a backing image is uploading)",
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.BackupBackingImage": {
      "description": "BackupBackingImage is where Longhorn stores backing image backup object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackupBackingImage"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "BackupBackingImageSpec defines the desired state of the Longhorn backing image backup",
          "properties": {
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The labels of backing image backup.",
              "type": "object"
            },
            "syncRequestedAt": {
              "description": "The time to request run sync the remote backing image backup.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "userCreated": {
              "description": "Is this CR created by user through API or UI.\nRequired",
              "type": "boolean"
            }
          },
          "required": [
            "userCreated"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "BackupBackingImageStatus defines the observed state of the Longhorn backing image backup",
          "properties": {
            "backingImage": {
              "description": "The backing image name.",
              "type": "string"
            },
            "backupCreatedAt": {
              "description": "The backing image backup upload finished time.",
              "type": "string"
            },
            "checksum": {
              "description": "The checksum of the backing image.",
              "type": "string"
            },
            "compressionMethod": {
              "description": "Compression method",
              "type": "string"
            },
            "error": {
              "description": "The error message when taking the backing image backup.",
              "type": "string"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The labels of backing image backup.",
              "nullable": true,
              "type": "object"
            },
            "lastSyncedAt": {
              "description": "The last time that the backing image backup was synced with the remote backup target.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "managerAddress": {
              "description": "The address of the backing image manager that runs backing image backup.",
              "type": "string"
            },
            "messages": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The error messages when listing or inspecting backing image backup.",
              "nullable": true,
              "type": "object"
            },
            "ownerID": {
              "description": "The node ID on which the controller is responsible to reconcile this CR.",
              "type": "string"
            },
            "progress": {
              "description": "The backing image backup progress.",
              "type": "integer"
            },
            "size": {
              "description": "The backing image size.",
              "format": "int64",
              "type": "integer"
            },
            "state": {
              "description": "The backing image backup creation state.\nCan be \"\", \"InProgress\", \"Completed\", \"Error\", \"Unknown\".",
              "type": "string"
            },
            "url": {
              "description": "The backing image backup URL.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.Backup": {
      "description": "Backup is where Longhorn stores backup object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Backup"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.Backup": {
      "description": "Backup is where Longhorn stores backup object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Backup"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "BackupSpec defines the desired state of the Longhorn backup",
          "properties": {
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The labels of snapshot backup.",
              "type": "object"
            },
            "snapshotName": {
              "description": "The snapshot name.",
              "type": "string"
            },
            "syncRequestedAt": {
              "description": "The time to request run sync the remote backup.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "BackupStatus defines the observed state of the Longhorn backup",
          "properties": {
            "backupCreatedAt": {
              "description": "The snapshot backup upload finished time.",
              "type": "string"
            },
            "compressionMethod": {
              "description": "Compression method",
              "type": "string"
            },
            "error": {
              "description": "The error message when taking the snapshot backup.",
              "type": "string"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The labels of snapshot backup.",
              "nullable": true,
              "type": "object"
            },
            "lastSyncedAt": {
              "description": "The last time that the backup was synced with the remote backup target.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "messages": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The error messages when calling longhorn engine on listing or inspecting backups.",
              "nullable": true,
              "type": "object"
            },
            "ownerID": {
              "description": "The node ID on which the controller is responsible to reconcile this backup CR.",
              "type": "string"
            },
            "progress": {
              "description": "The snapshot backup progress.",
              "type": "integer"
            },
            "replicaAddress": {
              "description": "The address of the replica that runs snapshot backup.",
              "type": "string"
            },
            "size": {
              "description": "The snapshot size.",
              "type": "string"
            },
            "snapshotCreatedAt": {
              "description": "The snapshot creation time.",
              "type": "string"
            },
            "snapshotName": {
              "description": "The snapshot name.",
              "type": "string"
            },
            "state": {
              "description": "The backup creation state.\nCan be \"\", \"InProgress\", \"Completed\", \"Error\", \"Unknown\".",
              "type": "string"
            },
            "url": {
              "description": "The snapshot backup URL.",
              "type": "string"
            },
            "volumeBackingImageName": {
              "description": "The volume's backing image name.",
              "type": "string"
            },
            "volumeCreated": {
              "description": "The volume creation time.",
              "type": "string"
            },
            "volumeName": {
              "description": "The volume name.",
              "type": "string"
            },
            "volumeSize": {
              "description": "The volume size.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.BackupTarget": {
      "description": "BackupTarget is where Longhorn stores backup target object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackupTarget"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.BackupTarget": {
      "description": "BackupTarget is where Longhorn stores backup target object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackupTarget"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "BackupTargetSpec defines the desired state of the Longhorn backup target",
          "properties": {
            "backupTargetURL": {
              "description": "The backup target URL.",
              "type": "string"
            },
            "credentialSecret": {
              "description": "The backup target credential secret.",
              "type": "string"
            },
            "pollInterval": {
              "description": "The interval that the cluster needs to run sync with the backup target.",
              "type": "string"
            },
            "syncRequestedAt": {
              "description": "The time to request run sync the remote backup target.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "BackupTargetStatus defines the observed state of the Longhorn backup target",
          "properties": {
            "available": {
              "description": "Available indicates if the remote backup target is available or not.",
              "type": "boolean"
            },
            "conditions": {
              "description": "Records the reason on why the backup target is unavailable.",
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "lastSyncedAt": {
              "description": "The last time that the controller synced with the remote backup target.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "ownerID": {
              "description": "The node ID on which the controller is responsible to reconcile this backup target CR.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.BackupVolume": {
      "description": "BackupVolume is where Longhorn stores backup volume object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackupVolume"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.BackupVolume": {
      "description": "BackupVolume is where Longhorn stores backup volume object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "BackupVolume"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "BackupVolumeSpec defines the desired state of the Longhorn backup volume",
          "properties": {
            "syncRequestedAt": {
              "description": "The time to request run sync the remote backup volume.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "BackupVolumeStatus defines the observed state of the Longhorn backup volume",
          "properties": {
            "backingImageChecksum": {
              "description": "the backing image checksum.",
              "type": "string"
            },
            "backingImageName": {
              "description": "The backing image name.",
              "type": "string"
            },
            "createdAt": {
              "description": "The backup volume creation time.",
              "type": "string"
            },
            "dataStored": {
              "description": "The backup volume block count.",
              "type": "string"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The backup volume labels.",
              "nullable": true,
              "type": "object"
            },
            "lastBackupAt": {
              "description": "The latest volume backup time.",
              "type": "string"
            },
            "lastBackupName": {
              "description": "The latest volume backup name.",
              "type": "string"
            },
            "lastModificationTime": {
              "description": "The backup volume config last modification time.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "lastSyncedAt": {
              "description": "The last time that the backup volume was synced into the cluster.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "messages": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The error messages when call longhorn engine on list or inspect backup volumes.",
              "nullable": true,
              "type": "object"
            },
            "ownerID": {
              "description": "The node ID on which the controller is responsible to reconcile this backup volume CR.",
              "type": "string"
            },
            "size": {
              "description": "The backup volume size.",
              "type": "string"
            },
            "storageClassName": {
              "description": "the storage class name of pv/pvc binding with the volume.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.EngineImage": {
      "description": "EngineImage is where Longhorn stores engine image object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "EngineImage"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.EngineImage": {
      "description": "EngineImage is where Longhorn stores engine image object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "EngineImage"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "EngineImageSpec defines the desired state of the Longhorn engine image",
          "properties": {
            "image": {
              "minLength": 1,
              "type": "string"
            }
          },
          "required": [
            "image"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "EngineImageStatus defines the observed state of the Longhorn engine image",
          "properties": {
            "buildDate": {
              "type": "string"
            },
            "cliAPIMinVersion": {
              "type": "integer"
            },
            "cliAPIVersion": {
              "type": "integer"
            },
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "controllerAPIMinVersion": {
              "type": "integer"
            },
            "controllerAPIVersion": {
              "type": "integer"
            },
            "dataFormatMinVersion": {
              "type": "integer"
            },
            "dataFormatVersion": {
              "type": "integer"
            },
            "gitCommit": {
              "type": "string"
            },
            "incompatible": {
              "type": "boolean"
            },
            "noRefSince": {
              "type": "string"
            },
            "nodeDeploymentMap": {
              "additionalProperties": {
                "type": "boolean"
              },
              "nullable": true,
              "type": "object"
            },
            "ownerID": {
              "type": "string"
            },
            "refCount": {
              "type": "integer"
            },
            "state": {
              "type": "string"
            },
            "version": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.Engine": {
      "description": "Engine is where Longhorn stores engine object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Engine"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.Engine": {
      "description": "Engine is where Longhorn stores engine object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Engine"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "EngineSpec defines the desired state of the Longhorn engine",
          "properties": {
            "active": {
              "type": "boolean"
            },
            "backendStoreDriver": {
              "description": "Deprecated:Replaced by field `dataEngine`.",
              "type": "string"
            },
            "backupVolume": {
              "type": "string"
            },
            "dataEngine": {
              "enum": [
                "v1",
                "v2"
              ],
              "type": "string"
            },
            "desireState": {
              "type": "string"
            },
            "disableFrontend": {
              "type": "boolean"
            },
            "engineImage": {
              "description": "Deprecated: Replaced by field `image`.",
              "type": "string"
            },
            "frontend": {
              "enum": [
                "blockdev",
                "iscsi",
                "nvmf",
                ""
              ],
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "logRequested": {
              "type": "boolean"
            },
            "nodeID": {
              "type": "string"
            },
            "replicaAddressMap": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "requestedBackupRestore": {
              "type": "string"
            },
            "requestedDataSource": {
              "type": "string"
            },
            "revisionCounterDisabled": {
              "type": "boolean"
            },
            "salvageRequested": {
              "type": "boolean"
            },
            "snapshotMaxCount": {
              "type": "integer"
            },
            "snapshotMaxSize": {
              "format": "int64",
              "type": "string"
            },
            "unmapMarkSnapChainRemovedEnabled": {
              "type": "boolean"
            },
            "upgradedReplicaAddressMap": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "volumeName": {
              "type": "string"
            },
            "volumeSize": {
              "format": "int64",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "EngineStatus defines the observed state of the Longhorn engine",
          "properties": {
            "backupStatus": {
              "additionalProperties": {
                "properties": {
                  "backupURL": {
                    "type": "string"
                  },
                  "error": {
                    "type": "string"
                  },
                  "progress": {
                    "type": "integer"
                  },
                  "replicaAddress": {
                    "type": "string"
                  },
                  "snapshotName": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "cloneStatus": {
              "additionalProperties": {
                "properties": {
                  "error": {
                    "type": "string"
                  },
                  "fromReplicaAddress": {
                    "type": "string"
                  },
                  "isCloning": {
                    "type": "boolean"
                  },
                  "progress": {
                    "type": "integer"
                  },
                  "snapshotName": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "currentImage": {
              "type": "string"
            },
            "currentReplicaAddressMap": {
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true,
              "type": "object"
            },
            "currentSize": {
              "format": "int64",
              "type": "string"
            },
            "currentState": {
              "type": "string"
            },
            "endpoint": {
              "type": "string"
            },
            "instanceManagerName": {
              "type": "string"
            },
            "ip": {
              "type": "string"
            },
            "isExpanding": {
              "type": "boolean"
            },
            "lastExpansionError": {
              "type": "string"
            },
            "lastExpansionFailedAt": {
              "type": "string"
            },
            "lastRestoredBackup": {
              "type": "string"
            },
            "logFetched": {
              "type": "boolean"
            },
            "ownerID": {
              "type": "string"
            },
            "port": {
              "type": "integer"
            },
            "purgeStatus": {
              "additionalProperties": {
                "properties": {
                  "error": {
                    "type": "string"
                  },
                  "isPurging": {
                    "type": "boolean"
                  },
                  "progress": {
                    "type": "integer"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "rebuildStatus": {
              "additionalProperties": {
                "properties": {
                  "error": {
                    "type": "string"
                  },
                  "fromReplicaAddress": {
                    "type": "string"
                  },
                  "isRebuilding": {
                    "type": "boolean"
                  },
                  "progress": {
                    "type": "integer"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "replicaModeMap": {
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true,
              "type": "object"
            },
            "replicaTransitionTimeMap": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "ReplicaTransitionTimeMap records the time a replica in ReplicaModeMap transitions from one mode to another (or\nfrom not being in the ReplicaModeMap to being in it). This information is sometimes required by other controllers\n(e.g. the volume controller uses it to determine the correct value for replica.Spec.lastHealthyAt).",
              "type": "object"
            },
            "restoreStatus": {
              "additionalProperties": {
                "properties": {
                  "backupURL": {
                    "type": "string"
                  },
                  "currentRestoringBackup": {
                    "type": "string"
                  },
                  "error": {
                    "type": "string"
                  },
                  "filename": {
                    "type": "string"
                  },
                  "isRestoring": {
                    "type": "boolean"
                  },
                  "lastRestored": {
                    "type": "string"
                  },
                  "progress": {
                    "type": "integer"
                  },
                  "state": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "salvageExecuted": {
              "type": "boolean"
            },
            "snapshotMaxCount": {
              "type": "integer"
            },
            "snapshotMaxSize": {
              "format": "int64",
              "type": "string"
            },
            "snapshots": {
              "additionalProperties": {
                "properties": {
                  "children": {
                    "additionalProperties": {
                      "type": "boolean"
                    },
                    "nullable": true,
                    "type": "object"
                  },
                  "created": {
                    "type": "string"
                  },
                  "labels": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "nullable": true,
                    "type": "object"
                  },
                  "name": {
                    "type": "string"
                  },
                  "parent": {
                    "type": "string"
                  },
                  "removed": {
                    "type": "boolean"
                  },
                  "size": {
                    "type": "string"
                  },
                  "usercreated": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "snapshotsError": {
              "type": "string"
            },
            "started": {
              "type": "boolean"
            },
            "storageIP": {
              "type": "string"
            },
            "unmapMarkSnapChainRemovedEnabled": {
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.InstanceManager": {
      "description": "InstanceManager is where Longhorn stores instance manager object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "InstanceManager"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.InstanceManager": {
      "description": "InstanceManager is where Longhorn stores instance manager object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "InstanceManager"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "InstanceManagerSpec defines the desired state of the Longhorn instance manager",
          "properties": {
            "dataEngine": {
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "nodeID": {
              "type": "string"
            },
            "type": {
              "enum": [
                "aio",
                "engine",
                "replica"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "InstanceManagerStatus defines the observed state of the Longhorn instance manager",
          "properties": {
            "apiMinVersion": {
              "type": "integer"
            },
            "apiVersion": {
              "type": "integer"
            },
            "currentState": {
              "type": "string"
            },
            "instanceEngines": {
              "additionalProperties": {
                "properties": {
                  "spec": {
                    "properties": {
                      "backendStoreDriver": {
                        "description": "Deprecated:Replaced by field `dataEngine`.",
                        "type": "string"
                      },
                      "dataEngine": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "status": {
                    "properties": {
                      "conditions": {
                        "additionalProperties": {
                          "type": "boolean"
                        },
                        "nullable": true,
                        "type": "object"
                      },
                      "endpoint": {
                        "type": "string"
                      },
                      "errorMsg": {
                        "type": "string"
                      },
                      "listen": {
                        "type": "string"
                      },
                      "portEnd": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "portStart": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "resourceVersion": {
                        "format": "int64",
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "instanceReplicas": {
              "additionalProperties": {
                "properties": {
                  "spec": {
                    "properties": {
                      "backendStoreDriver": {
                        "description": "Deprecated:Replaced by field `dataEngine`.",
                        "type": "string"
                      },
                      "dataEngine": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "status": {
                    "properties": {
                      "conditions": {
                        "additionalProperties": {
                          "type": "boolean"
                        },
                        "nullable": true,
                        "type": "object"
                      },
                      "endpoint": {
                        "type": "string"
                      },
                      "errorMsg": {
                        "type": "string"
                      },
                      "listen": {
                        "type": "string"
                      },
                      "portEnd": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "portStart": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "resourceVersion": {
                        "format": "int64",
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "instances": {
              "additionalProperties": {
                "properties": {
                  "spec": {
                    "properties": {
                      "backendStoreDriver": {
                        "description": "Deprecated:Replaced by field `dataEngine`.",
                        "type": "string"
                      },
                      "dataEngine": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "status": {
                    "properties": {
                      "conditions": {
                        "additionalProperties": {
                          "type": "boolean"
                        },
                        "nullable": true,
                        "type": "object"
                      },
                      "endpoint": {
                        "type": "string"
                      },
                      "errorMsg": {
                        "type": "string"
                      },
                      "listen": {
                        "type": "string"
                      },
                      "portEnd": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "portStart": {
                        "format": "int32",
                        "type": "integer"
                      },
                      "resourceVersion": {
                        "format": "int64",
                        "type": "integer"
                      },
                      "state": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "description": "Deprecated: Replaced by InstanceEngines and InstanceReplicas",
              "nullable": true,
              "type": "object"
            },
            "ip": {
              "type": "string"
            },
            "ownerID": {
              "type": "string"
            },
            "proxyApiMinVersion": {
              "type": "integer"
            },
            "proxyApiVersion": {
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.Node": {
      "description": "Node is where Longhorn stores Longhorn node object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Node"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.Node": {
      "description": "Node is where Longhorn stores Longhorn node object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Node"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "NodeSpec defines the desired state of the Longhorn node",
          "properties": {
            "allowScheduling": {
              "type": "boolean"
            },
            "disks": {
              "additionalProperties": {
                "properties": {
                  "allowScheduling": {
                    "type": "boolean"
                  },
                  "diskType": {
                    "enum": [
                      "filesystem",
                      "block"
                    ],
                    "type": "string"
                  },
                  "evictionRequested": {
                    "type": "boolean"
                  },
                  "path": {
                    "type": "string"
                  },
                  "storageReserved": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "tags": {
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "object"
            },
            "evictionRequested": {
              "type": "boolean"
            },
            "instanceManagerCPURequest": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "tags": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "NodeStatus defines the observed state of the Longhorn node",
          "properties": {
            "autoEvicting": {
              "type": "boolean"
            },
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "diskStatus": {
              "additionalProperties": {
                "properties": {
                  "conditions": {
                    "items": {
                      "properties": {
                        "lastProbeTime": {
                          "description": "Last time we probed the condition.",
                          "type": "string"
                        },
                        "lastTransitionTime": {
                          "description": "Last time the condition transitioned from one status to another.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human-readable message indicating details about last transition.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is the type of the condition.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "diskType": {
                    "type": "string"
                  },
                  "diskUUID": {
                    "type": "string"
                  },
                  "filesystemType": {
                    "type": "string"
                  },
                  "scheduledReplica": {
                    "additionalProperties": {
                      "format": "int64",
                      "type": "integer"
                    },
                    "nullable": true,
                    "type": "object"
                  },
                  "storageAvailable": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "storageMaximum": {
                    "format": "int64",
                    "type": "integer"
                  },
                  "storageScheduled": {
                    "format": "int64",
                    "type": "integer"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "object"
            },
            "region": {
              "type": "string"
            },
            "snapshotCheckStatus": {
              "properties": {
                "lastPeriodicCheckedAt": {
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "zone": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.Orphan": {
      "description": "Orphan is where Longhorn stores orphan object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Orphan"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "OrphanSpec defines the desired state of the Longhorn orphaned data",
          "properties": {
            "nodeID": {
              "description": "The node ID on which the controller is responsible to reconcile this orphan CR.",
              "type": "string"
            },
            "orphanType": {
              "description": "The type of the orphaned data.\nCan be \"replica\".",
              "type": "string"
            },
            "parameters": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The parameters of the orphaned data",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "OrphanStatus defines the observed state of the Longhorn orphaned data",
          "properties": {
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "ownerID": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.RecurringJob": {
      "description": "RecurringJob is where Longhorn stores recurring job object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "RecurringJob"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.RecurringJob": {
      "description": "RecurringJob is where Longhorn stores recurring job object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "RecurringJob"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "RecurringJobSpec defines the desired state of the Longhorn recurring job",
          "properties": {
            "concurrency": {
              "description": "The concurrency of taking the snapshot/backup.",
              "type": "integer"
            },
            "cron": {
              "description": "The cron setting.",
              "type": "string"
            },
            "groups": {
              "description": "The recurring job group.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The label of the snapshot/backup.",
              "type": "object"
            },
            "name": {
              "description": "The recurring job name.",
              "type": "string"
            },
            "retain": {
              "description": "The retain count of the snapshot/backup.",
              "type": "integer"
            },
            "task": {
              "description": "The recurring job task.\nCan be \"snapshot\", \"snapshot-force-create\", \"snapshot-cleanup\", \"snapshot-delete\", \"backup\", \"backup-force-create\" or \"filesystem-trim\"",
              "enum": [
                "snapshot",
                "snapshot-force-create",
                "snapshot-cleanup",
                "snapshot-delete",
                "backup",
                "backup-force-create",
                "filesystem-trim"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "RecurringJobStatus defines the observed state of the Longhorn recurring job",
          "properties": {
            "ownerID": {
              "description": "The owner ID which is responsible to reconcile this recurring job CR.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.Replica": {
      "description": "Replica is where Longhorn stores replica object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Replica"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.Replica": {
      "description": "Replica is where Longhorn stores replica object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Replica"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "ReplicaSpec defines the desired state of the Longhorn replica",
          "properties": {
            "active": {
              "type": "boolean"
            },
            "backendStoreDriver": {
              "description": "Deprecated:Replaced by field `dataEngine`.",
              "type": "string"
            },
            "backingImage": {
              "type": "string"
            },
            "dataDirectoryName": {
              "type": "string"
            },
            "dataEngine": {
              "enum": [
                "v1",
                "v2"
              ],
              "type": "string"
            },
            "desireState": {
              "type": "string"
            },
            "diskID": {
              "type": "string"
            },
            "diskPath": {
              "type": "string"
            },
            "engineImage": {
              "description": "Deprecated: Replaced by field `image`.",
              "type": "string"
            },
            "engineName": {
              "type": "string"
            },
            "evictionRequested": {
              "type": "boolean"
            },
            "failedAt": {
              "description": "FailedAt is set when a running replica fails or when a running engine is unable to use a replica for any reason.\nFailedAt indicates the time the failure occurred. When FailedAt is set, a replica is likely to have useful\n(though possibly stale) data. A replica with FailedAt set must be rebuilt from a non-failed replica (or it can\nbe used in a salvage if all replicas are failed). FailedAt is cleared before a rebuild or salvage. FailedAt may\nbe later than the corresponding entry in an engine's replicaTransitionTimeMap because it is set when the volume\ncontroller acknowledges the change.",
              "type": "string"
            },
            "hardNodeAffinity": {
              "type": "string"
            },
            "healthyAt": {
              "description": "HealthyAt is set the first time a replica becomes read/write in an engine after creation or rebuild. HealthyAt\nindicates the time the last successful rebuild occurred. When HealthyAt is set, a replica is likely to have\nuseful (though possibly stale) data. HealthyAt is cleared before a rebuild. HealthyAt may be later than the\ncorresponding entry in an engine's replicaTransitionTimeMap because it is set when the volume controller\nacknowledges the change.",
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "lastFailedAt": {
              "description": "LastFailedAt is always set at the same time as FailedAt. Unlike FailedAt, LastFailedAt is never cleared.\nLastFailedAt is not a reliable indicator of the state of a replica's data. For example, a replica with\nLastFailedAt may already be healthy and in use again. However, because it is never cleared, it can be compared to\nLastHealthyAt to help prevent dangerous replica deletion in some corner cases. LastFailedAt may be later than the\ncorresponding entry in an engine's replicaTransitionTimeMap because it is set when the volume controller\nacknowledges the change.",
              "type": "string"
            },
            "lastHealthyAt": {
              "description": "LastHealthyAt is set every time a replica becomes read/write in an engine. Unlike HealthyAt, LastHealthyAt is\nnever cleared. LastHealthyAt is not a reliable indicator of the state of a replica's data. For example, a\nreplica with LastHealthyAt set may be in the middle of a rebuild. However, because it is never cleared, it can be\ncompared to LastFailedAt to help prevent dangerous replica deletion in some corner cases. LastHealthyAt may be\nlater than the corresponding entry in an engine's replicaTransitionTimeMap because it is set when the volume\ncontroller acknowledges the change.",
              "type": "string"
            },
            "logRequested": {
              "type": "boolean"
            },
            "nodeID": {
              "type": "string"
            },
            "rebuildRetryCount": {
              "type": "integer"
            },
            "revisionCounterDisabled": {
              "type": "boolean"
            },
            "salvageRequested": {
              "type": "boolean"
            },
            "snapshotMaxCount": {
              "type": "integer"
            },
            "snapshotMaxSize": {
              "format": "int64",
              "type": "string"
            },
            "unmapMarkDiskChainRemovedEnabled": {
              "type": "boolean"
            },
            "volumeName": {
              "type": "string"
            },
            "volumeSize": {
              "format": "int64",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "ReplicaStatus defines the observed state of the Longhorn replica",
          "properties": {
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "currentImage": {
              "type": "string"
            },
            "currentState": {
              "type": "string"
            },
            "evictionRequested": {
              "description": "Deprecated: Replaced by field `spec.evictionRequested`.",
              "type": "boolean"
            },
            "instanceManagerName": {
              "type": "string"
            },
            "ip": {
              "type": "string"
            },
            "logFetched": {
              "type": "boolean"
            },
            "ownerID": {
              "type": "string"
            },
            "port": {
              "type": "integer"
            },
            "salvageExecuted": {
              "type": "boolean"
            },
            "started": {
              "type": "boolean"
            },
            "storageIP": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.Setting": {
      "description": "Setting is where Longhorn stores setting object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Setting"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "longhorn.io.v1beta2.Setting": {
      "description": "Setting is where Longhorn stores setting object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Setting"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "value": {
          "description": "The value of the setting.",
          "type": "string"
        }
      },
      "required": [
        "value"
      ],
      "type": "object"
    },
    "longhorn.io.v1beta1.ShareManager": {
      "description": "ShareManager is where Longhorn stores share manager object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "ShareManager"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.ShareManager": {
      "description": "ShareManager is where Longhorn stores share manager object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "ShareManager"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "ShareManagerSpec defines the desired state of the Longhorn share manager",
          "properties": {
            "image": {
              "description": "Share manager image used for creating a share manager pod",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "ShareManagerStatus defines the observed state of the Longhorn share manager",
          "properties": {
            "endpoint": {
              "description": "NFS endpoint that can access the mounted filesystem of the volume",
              "type": "string"
            },
            "ownerID": {
              "description": "The node ID on which the controller is responsible to reconcile this share manager resource",
              "type": "string"
            },
            "state": {
              "description": "The state of the share manager resource",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.Snapshot": {
      "description": "Snapshot is the Schema for the snapshots API",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Snapshot"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "SnapshotSpec defines the desired state of Longhorn Snapshot",
          "properties": {
            "createSnapshot": {
              "description": "require creating a new snapshot",
              "type": "boolean"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "The labels of snapshot",
              "nullable": true,
              "type": "object"
            },
            "volume": {
              "description": "the volume that this snapshot belongs to.\nThis field is immutable after creation.\nRequired",
              "type": "string"
            }
          },
          "required": [
            "volume"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "SnapshotStatus defines the observed state of Longhorn Snapshot",
          "properties": {
            "checksum": {
              "type": "string"
            },
            "children": {
              "additionalProperties": {
                "type": "boolean"
              },
              "nullable": true,
              "type": "object"
            },
            "creationTime": {
              "type": "string"
            },
            "error": {
              "type": "string"
            },
            "labels": {
              "additionalProperties": {
                "type": "string"
              },
              "nullable": true,
              "type": "object"
            },
            "markRemoved": {
              "type": "boolean"
            },
            "ownerID": {
              "type": "string"
            },
            "parent": {
              "type": "string"
            },
            "readyToUse": {
              "type": "boolean"
            },
            "restoreSize": {
              "format": "int64",
              "type": "integer"
            },
            "size": {
              "format": "int64",
              "type": "integer"
            },
            "userCreated": {
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.SupportBundle": {
      "description": "SupportBundle is where Longhorn stores support bundle object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "SupportBundle"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "SupportBundleSpec defines the desired state of the Longhorn SupportBundle",
          "properties": {
            "description": {
              "description": "A brief description of the issue",
              "type": "string"
            },
            "issueURL": {
              "description": "The issue URL",
              "nullable": true,
              "type": "string"
            },
            "nodeID": {
              "description": "The preferred responsible controller node ID.",
              "type": "string"
            }
          },
          "required": [
            "description"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "SupportBundleStatus defines the observed state of the Longhorn SupportBundle",
          "properties": {
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "filename": {
              "type": "string"
            },
            "filesize": {
              "format": "int64",
              "type": "integer"
            },
            "image": {
              "description": "The support bundle manager image",
              "type": "string"
            },
            "managerIP": {
              "description": "The support bundle manager IP",
              "type": "string"
            },
            "ownerID": {
              "description": "The current responsible controller node ID",
              "type": "string"
            },
            "progress": {
              "type": "integer"
            },
            "state": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.SystemBackup": {
      "description": "SystemBackup is where Longhorn stores system backup object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "SystemBackup"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "SystemBackupSpec defines the desired state of the Longhorn SystemBackup",
          "properties": {
            "volumeBackupPolicy": {
              "description": "The create volume backup policy\nCan be \"if-not-present\", \"always\" or \"disabled\"",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "SystemBackupStatus defines the observed state of the Longhorn SystemBackup",
          "properties": {
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "createdAt": {
              "description": "The system backup creation time.",
              "format": "date-time",
              "type": "string"
            },
            "gitCommit": {
              "description": "The saved Longhorn manager git commit.",
              "nullable": true,
              "type": "string"
            },
            "lastSyncedAt": {
              "description": "The last time that the system backup was synced into the cluster.",
              "format": "date-time",
              "nullable": true,
              "type": "string"
            },
            "managerImage": {
              "description": "The saved manager image.",
              "type": "string"
            },
            "ownerID": {
              "description": "The node ID of the responsible controller to reconcile this SystemBackup.",
              "type": "string"
            },
            "state": {
              "description": "The system backup state.",
              "type": "string"
            },
            "version": {
              "description": "The saved Longhorn version.",
              "nullable": true,
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.SystemRestore": {
      "description": "SystemRestore is where Longhorn stores system restore object",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "SystemRestore"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "SystemRestoreSpec defines the desired state of the Longhorn SystemRestore",
          "properties": {
            "systemBackup": {
              "description": "The system backup name in the object store.",
              "type": "string"
            }
          },
          "required": [
            "systemBackup"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "SystemRestoreStatus defines the observed state of the Longhorn SystemRestore",
          "properties": {
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "ownerID": {
              "description": "The node ID of the responsible controller to reconcile this SystemRestore.",
              "type": "string"
            },
            "sourceURL": {
              "description": "The source system backup URL.",
              "type": "string"
            },
            "state": {
              "description": "The system restore state.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.VolumeAttachment": {
      "description": "VolumeAttachment stores attachment information of a Longhorn volume",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "VolumeAttachment"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "VolumeAttachmentSpec defines the desired state of Longhorn VolumeAttachment",
          "properties": {
            "attachmentTickets": {
              "additionalProperties": {
                "properties": {
                  "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "id": {
                    "description": "The unique ID of this attachment. Used to differentiate different attachments of the same volume.",
                    "type": "string"
                  },
                  "nodeID": {
                    "description": "The node that this attachment is requesting",
                    "type": "string"
                  },
                  "parameters": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "Optional additional parameter for this attachment",
                    "type": "object"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "object"
            },
            "volume": {
              "description": "The name of Longhorn volume of this VolumeAttachment",
              "type": "string"
            }
          },
          "required": [
            "volume"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "VolumeAttachmentStatus defines the observed state of Longhorn VolumeAttachment",
          "properties": {
            "attachmentTicketStatuses": {
              "additionalProperties": {
                "properties": {
                  "conditions": {
                    "description": "Record any error when trying to fulfill this attachment",
                    "items": {
                      "properties": {
                        "lastProbeTime": {
                          "description": "Last time we probed the condition.",
                          "type": "string"
                        },
                        "lastTransitionTime": {
                          "description": "Last time the condition transitioned from one status to another.",
                          "type": "string"
                        },
                        "message": {
                          "description": "Human-readable message indicating details about last transition.",
                          "type": "string"
                        },
                        "reason": {
                          "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                          "type": "string"
                        },
                        "type": {
                          "description": "Type is the type of the condition.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "nullable": true,
                    "type": "array"
                  },
                  "generation": {
                    "description": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.",
                    "format": "int64",
                    "type": "integer"
                  },
                  "id": {
                    "description": "The unique ID of this attachment. Used to differentiate different attachments of the same volume.",
                    "type": "string"
                  },
                  "satisfied": {
                    "description": "Indicate whether this attachment ticket has been satisfied",
                    "type": "boolean"
                  }
                },
                "required": [
                  "conditions",
                  "satisfied"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta1.Volume": {
      "description": "Volume is where Longhorn stores volume object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta1"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Volume"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "x-kubernetes-preserve-unknown-fields": true
        },
        "status": {
          "x-kubernetes-preserve-unknown-fields": true
        }
      },
      "type": "object"
    },
    "longhorn.io.v1beta2.Volume": {
      "description": "Volume is where Longhorn stores volume object.",
      "properties": {
        "apiVersion": {
          "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
          "type": "string",
          "enum": [
            "longhorn.io/v1beta2"
          ]
        },
        "kind": {
          "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
          "type": "string",
          "enum": [
            "Volume"
          ]
        },
        "metadata": {
          "type": "object"
        },
        "spec": {
          "description": "VolumeSpec defines the desired state of the Longhorn volume",
          "properties": {
            "Standby": {
              "type": "boolean"
            },
            "accessMode": {
              "enum": [
                "rwo",
                "rwx"
              ],
              "type": "string"
            },
            "backendStoreDriver": {
              "description": "Deprecated:Replaced by field `dataEngine`.'",
              "type": "string"
            },
            "backingImage": {
              "type": "string"
            },
            "backupCompressionMethod": {
              "enum": [
                "none",
                "lz4",
                "gzip"
              ],
              "type": "string"
            },
            "dataEngine": {
              "enum": [
                "v1",
                "v2"
              ],
              "type": "string"
            },
            "dataLocality": {
              "enum": [
                "disabled",
                "best-effort",
                "strict-local"
              ],
              "type": "string"
            },
            "dataSource": {
              "type": "string"
            },
            "disableFrontend": {
              "type": "boolean"
            },
            "diskSelector": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "encrypted": {
              "type": "boolean"
            },
            "engineImage": {
              "description": "Deprecated: Replaced by field `image`.",
              "type": "string"
            },
            "fromBackup": {
              "type": "string"
            },
            "frontend": {
              "enum": [
                "blockdev",
                "iscsi",
                "nvmf",
                ""
              ],
              "type": "string"
            },
            "image": {
              "type": "string"
            },
            "lastAttachedBy": {
              "type": "string"
            },
            "migratable": {
              "type": "boolean"
            },
            "migrationNodeID": {
              "type": "string"
            },
            "nodeID": {
              "type": "string"
            },
            "nodeSelector": {
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "numberOfReplicas": {
              "type": "integer"
            },
            "offlineReplicaRebuilding": {
              "description": "OfflineReplicaRebuilding is used to determine if the offline replica rebuilding feature is enabled or not",
              "enum": [
                "ignored",
                "disabled",
                "enabled"
              ],
              "type": "string"
            },
            "replicaAutoBalance": {
              "enum": [
                "ignored",
                "disabled",
                "least-effort",
                "best-effort"
              ],
              "type": "string"
            },
            "replicaDiskSoftAntiAffinity": {
              "description": "Replica disk soft anti affinity of the volume. Set enabled to allow replicas to be scheduled in the same disk.",
              "enum": [
                "ignored",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "replicaSoftAntiAffinity": {
              "description": "Replica soft anti affinity of the volume. Set enabled to allow replicas to be scheduled on the same node.",
              "enum": [
                "ignored",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "replicaZoneSoftAntiAffinity": {
              "description": "Replica zone soft anti affinity of the volume. Set enabled to allow replicas to be scheduled in the same zone.",
              "enum": [
                "ignored",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "restoreVolumeRecurringJob": {
              "enum": [
                "ignored",
                "enabled",
                "disabled"
              ],
              "type": "string"
            },
            "revisionCounterDisabled": {
              "type": "boolean"
            },
            "size": {
              "format": "int64",
              "type": "string"
            },
            "snapshotDataIntegrity": {
              "enum": [
                "ignored",
                "disabled",
                "enabled",
                "fast-check"
              ],
              "type": "string"
            },
            "snapshotMaxCount": {
              "type": "integer"
            },
            "snapshotMaxSize": {
              "format": "int64",
              "type": "string"
            },
            "staleReplicaTimeout": {
              "type": "integer"
            },
            "unmapMarkSnapChainRemoved": {
              "enum": [
                "ignored",
                "disabled",
                "enabled"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "status": {
          "description": "VolumeStatus defines the observed state of the Longhorn volume",
          "properties": {
            "actualSize": {
              "format": "int64",
              "type": "integer"
            },
            "cloneStatus": {
              "properties": {
                "snapshot": {
                  "type": "string"
                },
                "sourceVolume": {
                  "type": "string"
                },
                "state": {
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "conditions": {
              "items": {
                "properties": {
                  "lastProbeTime": {
                    "description": "Last time we probed the condition.",
                    "type": "string"
                  },
                  "lastTransitionTime": {
                    "description": "Last time the condition transitioned from one status to another.",
                    "type": "string"
                  },
                  "message": {
                    "description": "Human-readable message indicating details about last transition.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Unique, one-word, CamelCase reason for the condition's last transition.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status is the status of the condition.\nCan be True, False, Unknown.",
                    "type": "string"
                  },
                  "type": {
                    "description": "Type is the type of the condition.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "nullable": true,
              "type": "array"
            },
            "currentImage": {
              "type": "string"
            },
            "currentMigrationNodeID": {
              "description": "the node that this volume is currently migrating to",
              "type": "string"
            },
            "currentNodeID": {
              "type": "string"
            },
            "expansionRequired": {
              "type": "boolean"
            },
            "frontendDisabled": {
              "type": "boolean"
            },
            "isStandby": {
              "type": "boolean"
            },
            "kubernetesStatus": {
              "properties": {
                "lastPVCRefAt": {
                  "type": "string"
                },
                "lastPodRefAt": {
                  "type": "string"
                },
                "namespace": {
                  "description": "determine if PVC/Namespace is history or not",
                  "type": "string"
                },
                "pvName": {
                  "type": "string"
                },
                "pvStatus": {
                  "type": "string"
                },
                "pvcName": {
                  "type": "string"
                },
                "workloadsStatus": {
                  "description": "determine if Pod/Workload is history or not",
                  "items": {
                    "properties": {
                      "podName": {
                        "type": "string"
                      },
                      "podStatus": {
                        "type": "string"
                      },
                      "workloadName": {
                        "type": "string"
                      },
                      "workloadType": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "nullable": true,
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "lastBackup": {
              "type": "string"
            },
            "lastBackupAt": {
              "type": "string"
            },
            "lastDegradedAt": {
              "type": "string"
            },
            "offlineReplicaRebuildingRequired": {
              "type": "boolean"
            },
            "ownerID": {
              "type": "string"
            },
            "pendingNodeID": {
              "description": "Deprecated.",
              "type": "string"
            },
            "remountRequestedAt": {
              "type": "string"
            },
            "restoreInitiated": {
              "type": "boolean"
            },
            "restoreRequired": {
              "type": "boolean"
            },
            "robustness": {
              "type": "string"
            },
            "shareEndpoint": {
              "type": "string"
            },
            "shareState": {
              "type": "string"
            },
            "state": {
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "type": "object"
    }
  }
}